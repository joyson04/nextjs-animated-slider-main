
version: 0.2

env:
  variables:
    SONARQUBE_CONTAINER_NAME: sonarqube-lts

phases:
  install:
    runtime-versions:
      nodejs: 22
    commands:
      - echo " Installing dependencies"
      - npm install

      - echo " Installing security tools"
      - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
      - curl -sSLo hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
      - chmod +x hadolint && mv hadolint /usr/local/bin/
      - curl -Lo snyk https://github.com/snyk/snyk/releases/latest/download/snyk-linux
      - chmod +x snyk && mv snyk  /usr/local/bin/

      - echo " Authenticating Snyk"
      - snyk auth $SNYK_TOKEN

  pre_build:
    commands:
      - echo " Running Snyk dependency scan"
      - snyk test || true

      - echo " Trivy filesystem scan"
      - trivy fs --exit-code 0 --format json --output trivy-fs-report.json .

      - echo " Linting Dockerfile with Hadolint"
      - if [ -f Dockerfile ]; then hadolint Dockerfile || true; else echo "No Dockerfile found"; fi

  build:
    commands:
      - echo " Building React app"
      # - npm run build

      - echo " Running unit tests"
      # - npm test

      - echo " Running Hadolint with custom severity levels"
      - hadolint --error DL3018 --warning DL3013 --info DL3025 Dockerfile || true

      - echo " Building Docker image"
      - docker build -t my-react-app:latest .

      - echo " Scanning Docker image with Trivy"
      - trivy image --exit-code 0 --format json --output trivy-image-report.json my-react-app:latest

      - echo " Running Docker container"
      - docker run -d -p 3000:3000 --name react-app my-react-app:latest

  post_build:
    commands:
      - echo " Generating Snyk JSON report"
      - snyk test --json > snyk-report.json || true

      - echo " Sending snapshot to Snyk for monitoring"
      - snyk monitor --project-name=nextjs-animated-slider-main || true 

      - echo " Running OWASP ZAP baseline DAST scan"
      - docker run -u zap -v $(pwd):/zap/wrk/:rw --network="host" -t zaproxy/zap-weekly zap-api-scan.py \
          -t http://localhost:3000/api-docs -f openapi \
          -r zap-report.html || true

      - echo " Stopping Docker container"
      - docker stop react-app && docker rm react-app || true

artifacts:
  files:
    - '**/*'
    - snyk-report.json
    - trivy-fs-report.json
    - trivy-image-report.json
    - zap-report.html

reports:
  snyk-scan:
    files:
      - snyk-report.json
    file-format: JSON

  trivy-fs-scan:
    files:
      - trivy-fs-report.json
    file-format: JSON

  trivy-image-scan:
    files:
      - trivy-image-report.json
    file-format: JSON

  zap-dast:
    files:
      - zap-report.html
    file-format: HTML
